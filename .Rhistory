library(openxlsx)
library(ggplot2)
library(maps)
data <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 1)
df <- data
color_scheme <- c("#AFD888", "#63ADD0", "#FF4540", "#D836C4", "#EE6B9E", "#FF8F40", "#FFFA73", "#00A779")
# 绘制地图
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "gray") +
geom_point(data = df, aes(x = longitude_deg, y = latitude_deg, size = `cell%`, fill = interaction(empo_1, empo_2)), alpha = 0.5, shape = 21, color = 'grey40', stroke = 0.5) +
scale_size_continuous(name = "Node size for relative abundance (%)", guide = guide_legend(override.aes = list(color = "black",fill="black"))) +
scale_fill_manual(values = color_scheme, name = "Node color for sample environmental type", guide = guide_legend(override.aes = list(size = 6))) +
labs(x = "longitude", y = "latitude") +
theme_classic() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # 设置标题的大小和字体样式
axis.title = element_text(size = 14),  # 设置坐标轴标签的大小
axis.text = element_text(size = 12),  # 设置坐标轴刻度标签的大小
legend.title = element_text(size = 14),  # 设置图例标题的大小
legend.text = element_text(size = 12),  # 设置图例标签的大小
legend.key.size = unit(1.5, "lines")  # 设置图例的大小
) +
NULL
# ggsave("world.pdf",units = "in",width = 17.27, height = 6.8)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
colnames(k) <- k[1, ]
k <- k[-1, ]
head(k)
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`)-as.integer(k$Un)
pre <- ver/total
pre
k$empo_1
p_cell
t(p_cell)
k
k[1,]
p_cell[1,]
k
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
p_cell$number <- 1:nrow(p_cell)
k=data.frame(t(p_cell),header=TRUE)
colnames(k) <- k[1, ]
k <- k[-1, ]
head(k)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
colnames(k) <- k[1, ]
k <- k[-1, ]
k$number <- 1:nrow(k)
head(k)
p_cell
data.frame(t(p_cell),header=TRUE)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
k$number <- 0:nrow(k)-1
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
k$number <- 0:nrow(k)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
k$number <- 0:(nrow(k)-1)
colnames(k) <- k[1, ]
k <- k[-1, ]
head(k)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
k <- cbind(number = 0:(nrow(k)-1), k)
colnames(k) <- k[1, ]
k <- k[-1, ]
head(k)
read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
k <- cbind(number = 0:(nrow(k)-1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[,1]
k <- k[-1, ]
head(k)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2)
k=data.frame(t(p_cell),header=TRUE)
k <- cbind(number = 0:(nrow(k)-1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[,1]
k <- k[-1, ]
k <- k[,-1]
head(k)
read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE)
k=data.frame(t(p_cell),header=TRUE)
k <- cbind(number = 0:(nrow(k)-1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[,1]
k <- k[-1, ]
k <- k[,-1]
head(k)
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`)-as.integer(k$Un)
pre <- ver/total
pre
new <- cbind(pre,k)
new
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`)-as.integer(k$Un)
pre <- ver/total
new <- cbind(pre,k)
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE)
k=data.frame(t(p_cell),header=TRUE)
k <- cbind(number = 0:(nrow(k)-1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[,1]
k <- k[-1, ]
k <- k[,-1]
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`)-as.integer(k$Un)
pre <- ver/total
new <- cbind(pre,k)
read_data <- function(k) {
k <- data.frame(t(p_cell), header = TRUE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`) - as.integer(k$Un)
pre <- ver / total
new <- cbind(pre, k)
return(new)
}
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE)
read_data(p_cell)
p_cell <- read_data(read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE))
read_data <- function(n) {
data <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = n,colNames = FALSE, rowNames = FALSE)
k <- data.frame(t(p_cell), header = TRUE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`) - as.integer(k$Un)
pre <- ver / total
new <- cbind(pre, k)
return(new)
}
p_cell <- read_data(2)
p_cell <- read_data('2')
p_cell <- read_data(read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE))
read_data <- function(k) {
k <- data.frame(t(p_cell), header = TRUE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`) - as.integer(k$Un)
pre <- ver / total
new <- cbind(pre, k)
return(new)
}
p_cell <- read_data(read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE))
read_data <- function(k) {
k <- data.frame(t(p_cell), header = FALSE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`) - as.integer(k$Un)
pre <- ver / total
new <- cbind(pre, k)
return(new)
}
p_cell <- read_data(read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE))
p_cell <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 2,colNames = FALSE, rowNames = FALSE)
p_cell <- read_data(p_cell)
p_cell
read_data <- function(n) {
data <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = n,colNames = FALSE, rowNames = FALSE)
k <- data.frame(t(data), header = FALSE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(k$`p-all`) - as.integer(k$Un)
pre <- ver / total
new <- cbind(pre, k)
return(new)
}
p_cell <- read_data(2)
p_cell
p_cell <- read_data(3)
p_cell
read_data <- function(n) {
data <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = n,colNames = FALSE, rowNames = FALSE)
k <- data.frame(t(data), header = FALSE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
return (k)
}
p_cell <- read_data(3)
p_cell
# ver <- as.integer(k$`d:Bacteria, p:"Verrucomicrobia"`)
# total <- as.integer(k$`p-all`) - as.integer(k$Un)
# pre <- ver / total
# new <- cbind(pre, k)
p_cell <- read_data(3)
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new
p_cell <- read_data(2)
p_cell
ggplot(df, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "empo_1", y = "Values") +
ggtitle("empo_1图表")
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
ggplot(df, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "empo_1", y = "Values") +
ggtitle("empo_1图表")
p_cell <- read_data(2)
p_cell
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new
ggplot(df, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue")
ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue")
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new <- new %>% filter(empo_1 != 'all')
library(tidyverse)
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new <- new %>% filter(empo_1 != 'all')
ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue")
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new <- new %>% filter(empo_1 != 'ALL')
ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue")
p <- ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()  # 使用ggpubr主题美化图表
library(ggpubr)
p <- ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()  # 使用ggpubr主题美化图表
p <- ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()  # 使用ggpubr主题美化图表
p
p <- ggplot(df, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()
# Print the chart
print(p)
p_value=1
p <- ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()  # 使用ggpubr主题美化图表
p
p_value=0.05
p <- ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()  # 使用ggpubr主题美化图表
p
library(tidyverse)
library(openxlsx)
library(ggpubr)
library(maps)
data <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = 1)
df <- data
color_scheme <- c("#AFD888", "#63ADD0", "#FF4540", "#D836C4", "#EE6B9E", "#FF8F40", "#FFFA73", "#00A779")
# 绘制地图
world_map <- map_data("world")
ggplot() +
geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "lightgray", color = "gray") +
geom_point(data = df, aes(x = longitude_deg, y = latitude_deg, size = `cell%`, fill = interaction(empo_1, empo_2)), alpha = 0.5, shape = 21, color = 'grey40', stroke = 0.5) +
scale_size_continuous(name = "Node size for relative abundance (%)", guide = guide_legend(override.aes = list(color = "black",fill="black"))) +
scale_fill_manual(values = color_scheme, name = "Node color for sample environmental type", guide = guide_legend(override.aes = list(size = 6))) +
labs(x = "longitude", y = "latitude") +
theme_classic() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # 设置标题的大小和字体样式
axis.title = element_text(size = 14),  # 设置坐标轴标签的大小
axis.text = element_text(size = 12),  # 设置坐标轴刻度标签的大小
legend.title = element_text(size = 14),  # 设置图例标题的大小
legend.text = element_text(size = 12),  # 设置图例标签的大小
legend.key.size = unit(1.5, "lines")  # 设置图例的大小
) +
NULL
# ggsave("world.pdf",units = "in",width = 17.27, height = 6.8)
read_data <- function(n) {
data <- read.xlsx("./Verrucomicrobia全球分布数据.xlsx", sheet = n,colNames = FALSE, rowNames = FALSE)
k <- data.frame(t(data), header = FALSE)
k <- cbind(number = 0:(nrow(k) - 1), k)
colnames(k) <- k[1, ]
rownames(k) <- k[, 1]
k <- k[-1, ]
k <- k[, -1]
return (k)
}
p_cell <- read_data(2)
p_cell
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new <- new %>% filter(empo_1 != 'ALL')
new
result <- ks.test(new$pre, "punif")
print(result)
result <- ks.test(new$`d:Archaea, p:"Crenarchaeota"`, "punif")
result <- ks.test(new$`d:Archaea, p:"Crenarchaeota"`, "punif")
result <- ks.test(new[,6], "punif")
new[,6]
result <- ks.test(as.integer(new[,6]), "punif")
print(result)
new[4,6]
new[4,6:]
p_cell <- read_data(2)
p_cell <- p_cell %>% mutate_if(is.character, as.numeric)
p_cell
p_cell <- read_data(2)
p_cell[, 4:ncol(p_cell)] <- p_cell[, 4:ncol(p_cell)] %>% mutate_if(is.character, as.numeric)
p_cell
p_cell[5,7]
ver <- as.integer(p_cell$`d:Bacteria, p:"Verrucomicrobia"`)
total <- as.integer(p_cell$`p-all`) - as.integer(p_cell$Un)
pre <- ver / total
new <- cbind(pre, p_cell)
new <- new %>% filter(empo_1 != 'ALL')
p_value=0.05
p <- ggplot(new, aes(x = empo_1, y = pre)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
geom_errorbar(aes(ymin = pre - 0.1, ymax = pre + 0.1), width = 0.2, color = "black") +
geom_text(aes(label = format(p_value, nsmall = 2)), vjust = -0.5, color = "black", size = 3) +
labs(x = "empo_1", y = "Pre", title = "Pre by empo_1") +
theme_pubr()
p
new
summary(new)
result <- ks.test(as.integer(new[,6]), "punif")
print(result)
result <- ks.test(new[,6], "punif")
print(result)
head(new)
data <- new
data <- data[-1, -ncol(data)]
# 确定要跳过的列数
skip_columns <- c(1:4, ncol(data))
# 循环判断每一列是否随机分布
for (col in colnames(data)) {
# 跳过指定的列
if (col %in% colnames(data)[skip_columns]) {
next
}
column <- data[[col]]
# 使用Shapiro-Wilk测试进行正态性检验
shapiro_test <- shapiro.test(column)
# 打印结果
cat("Column:", col, "\n")
cat("Shapiro-Wilk test p-value:", shapiro_test$p.value, "\n")
# 进行均匀性检验（使用Kolmogorov-Smirnov测试）
ks_test <- ks.test(column, "punif", min(column), max(column))
# 打印结果
cat("Kolmogorov-Smirnov test p-value:", ks_test$p.value, "\n")
# 判断是否满足随机分布的条件
if (shapiro_test$p.value >= 0.05 && ks_test$p.value >= 0.05) {
cat("The column is likely to follow a random distribution.\n")
} else {
cat("The column does not appear to follow a random distribution.\n")
}
cat("\n")
}
# 读取数据
data <- new
# 去掉第一行和最后一列（ALL）
data <- data[-1, -ncol(data)]
# 确定要跳过的列数
skip_columns <- c(1:4, ncol(data))
# 创建空的数据框
results <- data.frame(Column = character(),
Shapiro_Wilk_p_value = numeric(),
Kolmogorov_Smirnov_p_value = numeric(),
Random_Distribution = character(),
stringsAsFactors = FALSE)
# 循环判断每一列是否随机分布
for (col in colnames(data)) {
# 跳过指定的列
if (col %in% colnames(data)[skip_columns]) {
next
}
column <- data[[col]]
# 使用Shapiro-Wilk测试进行正态性检验
shapiro_test <- shapiro.test(column)
# 进行均匀性检验（使用Kolmogorov-Smirnov测试）
ks_test <- ks.test(column, "punif", min(column), max(column))
# 判断是否满足随机分布的条件
random_distribution <- ifelse(shapiro_test$p.value >= 0.05 && ks_test$p.value >= 0.05, "Yes", "No")
# 将结果存储到数据框
results <- results %>%
add_row(Column = col,
Shapiro_Wilk_p_value = shapiro_test$p.value,
Kolmogorov_Smirnov_p_value = ks_test$p.value,
Random_Distribution = random_distribution)
}
# 打印结果数据框
print(results)
head(new)
